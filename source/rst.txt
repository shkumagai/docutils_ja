====================
 |reStructuredText|
====================

.. -------------------------------------------------
    Markup Syntax and Parser Component of Docutils_
   -------------------------------------------------

----------------------------------------------------
 Docutils_ のマークアップ文法とパーサコンポーネント
----------------------------------------------------

:Date: $Date$

..
   .. Note:: "reStructuredText" is **ONE** word, *not two!*

.. note:: "reStructuredText" は **１語** です、 *２つではありません！*

.. contents::

.. reStructuredText is an easy-to-read, what-you-see-is-what-you-get
   plaintext markup syntax and parser system.  It is useful for in-line
   program documentation (such as Python docstrings), for quickly
   creating simple web pages, and for standalone documents.
   reStructuredText is designed for extensibility for specific
   application domains.  The reStructuredText parser is a component of
   Docutils_.  reStructuredText is a revision and reinterpretation of the
   StructuredText_ and Setext_ lightweight markup systems.

reStructuredText は読み易く、見たままが得られるプレーンテキストの
マークアップ文法とパーサの仕組みです。インラインの（Python の docstring
のような）プログラムドキュメントや、シンプルな Web ページや個別の
ドキュメントを簡単に作成するのに便利です。
reStructuredText は特定のアプリケーションドメインのための拡張として
設計されています。reStructuredText のパーサは Docutils_ のコンポーネントです。
reStructuredText は StructuredText_ や Setext_ 軽量マークアップシステムの
改訂であり、再解釈なのです。

.. The primary goal of reStructuredText is to define and implement a
   markup syntax for use in Python docstrings and other documentation
   domains, that is readable and simple, yet powerful enough for
   non-trivial use.  The intended purpose of the markup is the conversion
   of reStructuredText documents into useful structured data formats.

reStructuredText の第一のゴールは、Python の docstring およびその他の
ドキュメントのドメインで使用するための、非自明な使い方であっても十分に
強力でありながら、読み易くてシンプルなマークアップ文法を定義して、
実装することです。
マークアップの所期の目的は、reStructuredText ドキュメントを、使いやすい、
構造化されたデータフォーマットに変換することです。

.. See statemachine.py_ for an example of a Python module fully
   documented using reStructuredText.

全て reStructuredText を使ってドキュメントが書かれた Python モジュールの
例として statemachine.py_ を参照してください。


.. User Documentation
   ==================

ユーザ ドキュメント
===================

.. - `A ReStructuredText Primer`__ (HTML file, or `text source`__).
   - `Quick reStructuredText`__ (user reference)
   - `reStructuredText Cheat Sheet`__ (text only; 1 page for syntax, 1
     page directive & role reference)

- `ReStructuredText 入門書`__ （HTML ファイル、又は `テキストソース`__ ）。
- `早わかり reStructuredText`__ （ユーザリファレンス）
- `reStructuredText チートシート`__ （テキストのみ; 1 ページは文法、
  1ページはディレクティブとロールのリファレンス）

.. Users who have questions or need assistance with Docutils or
   reStructuredText should post a message to the Docutils-users_ mailing
   list.

質問または Docutils や reStructuredText の助けが必要なユーザは、
Docutils-users_ メーリングリストに投稿しましょう。

__ docs/user/rst/quickstart.html
__ docs/user/rst/quickstart.txt
__ docs/user/rst/quickref.html
__ docs/user/rst/cheatsheet.txt
.. _Docutils-users: docs/user/mailing-lists.html#docutils-users


.. Reference Documentation
   =======================

リファレンス ドキュメント
=========================

.. - `An Introduction to reStructuredText`__ (includes the Goals__ and
     History__ of reStructuredText)
   - `reStructuredText Markup Specification`__
   - `reStructuredText Directives`__
   - `reStructuredText Interpreted Text Roles`__

- `reStructuredText 入門`__ （reStructuredText の ゴール__ と
  歴史__ を含む）
- `reStructuredText マークアップ仕様`__
- `reStructuredText ディレクティブ`__
- `reStructuredText 解釈済みテキストロール`__

__ docs/ref/rst/introduction.html
__ docs/ref/rst/introduction.html#goals
__ docs/ref/rst/introduction.html#history
__ docs/ref/rst/restructuredtext.html
__ docs/ref/rst/directives.html
__ docs/ref/rst/roles.html


.. Developer Documentation
   =======================

開発者 ドキュメント
===================

.. - `A Record of reStructuredText Syntax Alternatives`__
   - `Problems With StructuredText`__

- `reStructuredText シンタックスの代替案の記録`__
- `StructuredText における問題点`__

__ docs/dev/rst/alternatives.html
__ docs/dev/rst/problems.html


.. How-To's
   --------

ハウツー
--------

.. - `Creating reStructuredText Directives`__
   - `Creating reStructuredText Interpreted Text Roles`__

- `reStructuredText ディレクティブの作り方`__
- `reStructuredText 解釈済みテキストロールの作り方`__

__ docs/howto/rst-directives.html
__ docs/howto/rst-roles.html


.. Try it Online
   =============

オンラインで挑戦
================

.. If you want to try reStructuredText out without downloading Docutils,
   you can use the `reStructuredText online renderer`__.  Thanks to Jiri
   Barton for `setting it up`__!

Docutils をダウンロードせずに reStructuredText を試してみたいなら、
`reStructuredText オンラインレンダラー`__ が使えます 。
`設定してくれた`__ Jiri Barton に感謝します！

__ http://www.hosting4u.cz/jbar/rest/rest.html
__ http://www.hosting4u.cz/jbar/rest/about.html


.. Testimonials
   ============

喜びの声
========

.. The following testimonials are excerpts from unsolicited posts to
   mailing lists and the comp.lang.python newsgroup.  Being excerpts,
   there's often context missing, which sometimes tones down the message.

次の反響はメーリングリストや comp.lang.python ニュースグループへの
未承諾のポストからの抜粋です。抜粋なので、しばしば文脈が失われたり、
時にはメッセージがトーンダウンしています。

`Ueli Schlaepfer on Doc-SIG, 2002-03-28`__:

__ http://mail.python.org/pipermail/doc-sig/2002-March/002526.html

..  I have adopted reST as my tool of choice for producing notes while
    doing lab work (mostly in a matlab environment).  Since then, the
    quality of such documentation has increased noticeably, mostly for
    two reasons:

    - I no longer need to switch to another tool, so the threshold has
      fallen to very low.  Note that "another tool" means Winword...
    - Still, I have a powerful set of markup constructs at my
      fingertips that let me create the kind of documents I need with
      more ease than any other tool I can think of.

    Thanks to reST/DPS [now Docutils --ed], I'll soon be able to go
    ahead and apply the same tools for extracting documentation out of
    my Python code.  Hey, that's a printable and a browsable version
    *for free*!  Personally, I consider this a large benefit.

    ... All essential constructs for everyday use are there, and much
    more if needed. ...
..

    僕はラボの（主に matlab環境の）仕事をやりながらノートを作成するための\
    ツールとして reST を選択した。それ以来、それらのドキュメントの品質は\
    主に次の二つの理由から著しく向上したよ:

    - 僕はもはや他のツールに切り換える必要がなくなり、ドキュメントを書くこと\
      への敷居がとても低くなったんだ。 "他のツール" というのは WinWord の\
      ことね…
    - その上僕は、自分が考え得る他のどのツールよりも簡単にこれらのドキュメントを\
      作れる強力なマークアップ構造のセットを手にしている。

    自分の Python コードからドキュメントを抽出するために、同じツールを適用して\
    すぐに仕事を進めることが出来るから、 reST/DPS [今は Docutils だね] には\
    感謝してるよ。なあ、それの印刷やブラウズ可能なバージョンが *無料* なんだぜ！
    個人的に、このことは大きな利益だと思っているんだ。

    ... 毎日使う重要な構成要素、そして必要であればさらに多くのものが全て\
    そこにあるんだ。 ...

`Guido van Rossum, enthusiastic about PEP 287 but a bit hasty (see the
follow-ups) on Python-Dev, 2002-04-02`__:

__ http://mail.python.org/pipermail/python-dev/2002-April/022131.html

..  Good PEP, David!  What's the next step?  Should the processing
    code be incorporated in the standard library?  Should we start
    converting the standard library docs to reStructuredText?
..

    いい PEP だ、David！ 次のステップは何？ このコードは標準ライブラリに
    組み込まれるべきかな？
    我々は標準ライブラリのドキュメントを reStructuredText に変換するべきかな？

`Timothy Delaney on comp.lang.python, 2002-04-03`__:

__ http://mail.python.org/pipermail/python-list/2002-April/096013.html

..  I read through all the reStructuredText docs, comparing the text
    versions to the html versions.  I found the text versions to be
    *very* easy to read, whilst making it obvious in most cases when
    something was "special".

    I particularly like the system of doing hyperlinks...

    Definitely +1 from me ... I would really like a standard, clean
    docstring format.  Might make it easier to get my next project
    done in Python...
..

    自分は reStructuredText のドキュメントをすべて読んでテキスト版とHTML版を\
    比較してみた。テキスト版は何か "特別" だったときに、ほとんどの場合にそれを\
    明示的に作るんだけど、 *非常に* 読み易いということが分かったよ。

    特にハイパーリンクを行う仕組みが特に気に入った。

    自分からは間違いなく +1... 自分は本当に標準の、きれいな docstring 用\
    フォーマットにしたいよ。

    自分の次の Python のプロジェクトが簡単に終わらせられるかも知れないな...

`Guido van Rossum on Python-Dev, 2002-04-03`__:

__ http://mail.python.org/pipermail/python-dev/2002-April/022212.html

..  I think that reStructuredText is a good format for marking up
    docstrings; it's probably as good as it gets given the
    requirements (a fairly elaborate feature set, yet more readable
    "in the raw" than HTML).
..

    reStructuredText は docstring をマークアップするのにいい形式だと思う; \
    おそらく与えられた条件に見合う（かなり手の込んだことができる機能セット\
    にも関わらず、"生で" HTML よりも読みやすい）。

`Richard Jones on comp.lang.python, 2002-04-03`__:

__ http://mail.python.org/pipermail/python-list/2002-April/096117.html

    How I see it is that ReST is a middle ground between markup and
    non-.  It has markup, and you can use it to the extreme.  Or you
    can follow some simple conventions (the most basic form of markup)
    and not worry about all the finer detail stuff. The difference
    between::

        @section{The Section Title}

    and::

        The Section Title
        -----------------

    Is pretty clearly to me that the second doesn't *look* like
    markup, even though it is.

`Guido van Rossum on Python-Dev, 2002-04-04`__:

__ http://mail.python.org/pipermail/python-dev/2002-April/022247.html

    Structured text is really a great idea for certain situations;
    reST is a much better implementation of the idea than any versions
    I've seen before.

`Max M on comp.lang.python, 2002-04-05`__:

__ http://mail.python.org/pipermail/python-list/2002-April/096656.html

    Any programmer can learn the basics in 15 minutes or less.

    And it really is very very easy to write documents in it.  I do
    belive that if I were ever to write a book (again) I would write
    it in ReST.

    And as far as I can tell from the specs, ReST solves most of the
    problems I have had with structured text.  A few things gets a
    little more complicated and some get simpler.  All in all a good
    bargain.

    I would certainly use it.  I also hope that it gets integrated
    into Zope.

`David Abrahams on Python-Dev, 2002-04-06`__:

__ http://mail.python.org/pipermail/python-dev/2002-April/022443.html

    Incidentally, I'm really excited about reST.  I've been looking
    for a tolerable markup for C++ comments, and reST looks like it
    might fit the bill.

`Eric Jones on Python-Dev, 2002-08-01`__:

__ http://mail.python.org/pipermail/python-dev/2002-August/027198.html

    I would very much like to see reStructuredText, or some minor
    variation on it, move forward as a "standard" for doc-strings very
    soon.  I have long lamented not having a prescribed format *and*
    an associated processing tool suite included in the standard
    library.  Even if the format isn't perfect (I think it looks very
    good), it is time to pick a reasonable candidate and go.

This being the Internet, there were plenty of people opposed to the
idea of reStructuredText, some vehemently.  Discovering *those* gems
is left as an exercise for the reader.

.. _Docutils: index.html
.. _StructuredText:
   http://dev.zope.org/Members/jim/StructuredTextWiki/FrontPage/
.. _Setext: mirror/setext.html
.. _statemachine.py: docutils/statemachine.py

.. |reStructuredText| image:: rst.png


..
   Local Variables:
   mode: indented-text
   indent-tabs-mode: nil
   sentence-end-double-space: t
   fill-column: 70
   End:
