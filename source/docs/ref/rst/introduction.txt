.. =====================================
    An Introduction to reStructuredText
   =====================================

=======================
 reStructuredText 入門
=======================
:Author: David Goodger
:Contact: docutils-develop@lists.sourceforge.net
:Revision: $Revision$
:Date: $Date$
:Copyright: This document has been placed in the public domain.

.. reStructuredText_ is an easy-to-read, what-you-see-is-what-you-get
   plaintext markup syntax and parser system.  It is useful for inline
   program documentation (such as Python docstrings), for quickly
   creating simple web pages, and for standalone documents.
   reStructuredText_ is a proposed revision and reinterpretation of the
   StructuredText_ and Setext_ lightweight markup systems.

reStructuredText_ は読み易く、見たままのものが得られる、プレーンテキストの\
マークアップ文法およびパーサシステムです。インラインの（Python の docstring \
のような）プログラムドキュメントを書いたり、シンプルな web ページをさっと\
作ったり、個別のドキュメントを作成するのにも便利です。
reStructuredText_ は StructuredText_ や Setext_ 軽量マークアップシステムの\
改善提案であり、再解釈なのです。

.. reStructuredText is designed for extensibility for specific
   application domains.  Its parser is a component of Docutils_.

reStructuredText は特定のアプリケーションドメインのための拡張として\
設計されています。パーサは Docutils_ のコンポーネントです。

.. This document defines the goals_ of reStructuredText and provides a
   history_ of the project.  It is written using the reStructuredText
   markup, and therefore serves as an example of its use.  For a gentle
   introduction to using reStructuredText, please read `A
   ReStructuredText Primer`_.  The `Quick reStructuredText`_ user
   reference is also useful.  The `reStructuredText Markup
   Specification`_ is the definitive reference.  There is also an
   analysis of the `Problems With StructuredText`_.

このドキュメントでは reStructuredText のゴールを定義し、プロジェクトの\
歴史をご紹介します。このドキュメントも reStructuredText で書かれており、\
その使い方の例として役割を果たします。
reStructuredText の使い方の丁寧な概要については、 `reStructuredText 入門書`_\
を読んでください。 `早わかり reStructuredText`_ ユーザリファレンスも便利です。
`reStructuredText マークアップ仕様`_ は最も信頼のおけるリファレンスです。\
`StructuredText における問題点`_ の分析もあります。

.. ReStructuredText's web page is
   http://docutils.sourceforge.net/rst.html.

ReStructuredText の web ページは
http://docutils.sourceforge.net/rst.html です。

.. _reStructuredText: http://docutils.sourceforge.net/rst.html
.. _StructuredText:
    http://www.zope.org/DevHome/Members/jim/StructuredTextWiki/FrontPage
.. _Setext: http://docutils.sourceforge.net/mirror/setext.html
.. _Docutils: http://docutils.sourceforge.net/
.. _`reStructuredText 入門書`:
.. _A ReStructuredText Primer: ../../user/rst/quickstart.html
.. _`早わかり reStructuredText`:
.. _Quick reStructuredText: ../../user/rst/quickref.html
.. _`reStructuredText マークアップ仕様`:
.. _reStructuredText Markup Specification: restructuredtext.html
.. _`StructuredText における問題点`:
.. _Problems with StructuredText: ../../dev/rst/problems.html


.. Goals
   =====
.. _goals:

ゴール
======

.. The primary goal of reStructuredText_ is to define a markup syntax for
   use in Python docstrings and other documentation domains, that is
   readable and simple, yet powerful enough for non-trivial use.  The
   intended purpose of the reStructuredText markup is twofold:

reStructuredText_ の第一のゴールは Python docstring および他の\
ドキュメントのドメインで使用するために、大掛かりな使い方も十分に強力で\
ありながら読み易くてシンプルなマークアップ文法を定義することです。
reStructutedText のマークアップが意図する目的は二つあります:

.. - the establishment of a set of standard conventions allowing the
     expression of structure within plaintext, and

   - the conversion of such documents into useful structured data
     formats.

- プレーンテキストの中で構造の表現を可能にする、標準的な一連の規則を\
  確立すること、そして

- そのようなドキュメントを便利なデータフォーマットに変換することです。

.. The secondary goal of reStructuredText is to be accepted by the Python
   community (by way of being blessed by PythonLabs and the BDFL [#]_) as
   a standard for Python inline documentation (possibly one of several
   standards, to account for taste).

reStructuredText の第二のゴールは Python のインラインドキュメントのための\
標準（人には好みがあるので、できればいくつかあるうちの一つ）として Python\
コミュニティに（Pythonlab や BDFL [#]_ によってもたらされるという方法で）\
受け入れられることです。

..
   .. [#] Python's creator and "Benevolent Dictator For Life",
      Guido van Rossum.
..
.. [#] Python の創造者 または 慈悲深き独裁者" こと、Guide van Rossum のことです。

.. To clarify the primary goal, here are specific design goals, in order,
   beginning with the most important:

これは、第一のゴールを明確にするための、最も重要なものから始まる、\
明確な設計目標です。

.. 1. Readable.  The marked-up text must be easy to read without any
      prior knowledge of the markup language.  It should be as easily
      read in raw form as in processed form.

   2. Unobtrusive.  The markup that is used should be as simple and
      unobtrusive as possible.  The simplicity of markup constructs
      should be roughly proportional to their frequency of use.  The most
      common constructs, with natural and obvious markup, should be the
      simplest and most unobtrusive.  Less common constructs, for which
      there is no natural or obvious markup, should be distinctive.

   3. Unambiguous.  The rules for markup must not be open for
      interpretation.  For any given input, there should be one and only
      one possible output (including error output).

   4. Unsurprising.  Markup constructs should not cause unexpected output
      upon processing.  As a fallback, there must be a way to prevent
      unwanted markup processing when a markup construct is used in a
      non-markup context (for example, when documenting the markup syntax
      itself).

   5. Intuitive.  Markup should be as obvious and easily remembered as
      possible, for the author as well as for the reader.  Constructs
      should take their cues from such naturally occurring sources as
      plaintext email messages, newsgroup postings, and text
      documentation such as README.txt files.

   6. Easy.  It should be easy to mark up text using any ordinary text
      editor.

   7. Scalable.  The markup should be applicable regardless of the length
      of the text.

   8. Powerful.  The markup should provide enough constructs to produce a
      reasonably rich structured document.

   9. Language-neutral.  The markup should apply to multiple natural (as
      well as artificial) languages, not only English.

   10. Extensible.  The markup should provide a simple syntax and
       interface for adding more complex general markup, and custom
       markup.

   11. Output-format-neutral.  The markup will be appropriate for
       processing to multiple output formats, and will not be biased
       toward any particular format.

1. 読みやすいこと。マークアップされたテキストはマークアップ言語に関する\
   いかなる予備知識を持たなくても読みやすいものでなければなりません。
   処理された形式と同様に、そのままの形式でも読みやすくあるべきです。

2. 控えめであること。使用されるマークアップは可能な限りシンプルである\
   べきです。マークアップ構造のシンプルさは、マークアップの使用頻度に\
   おおよそ比例しているべきです。もっとも一般的な構造は、自然かつ明示的な\
   マークアップを持ち、もっともシンプルかつ控えめであるべきです。\
   あまり一般的でない構造は、自然であったり明示的なマークアップもなく、\
   独特であるべきです。\

3. 明白であること。マークアップのルールは解釈のために開放すべきではありません。
   いかなる入力に対しても、唯ひとつの可能な出力があるべきです（エラー出力を\
   含みます）。

4. 予測できること。マークアップ構造は、処理中に予期しない出力を引き起こす\
   べきではありません。回避策として、非マークアップの文脈でマークアップ構造を\
   使用している場合に、意図しないマークアップ処理を防ぐ方法があるできです\
   （例えば、マークアップシンタックスそのものを記述している場合）。

5. 直感的であること。マークアップは執筆者にとってだけでなく読者にとっても\
   明示的かつ容易であるように留意されるべきです。マークアップの構造は\
   プレーンテキストのEメールメッセージ、ニュースグループへの投稿、そして\
   README.txt ファイルのようなテキストドキュメントなどの自然に存在する\
   情報源からその手がかりを得るべきです。

6. 簡単であること。どの普通のテキストエディタをつかっても簡単に\
   マークアップができるべきです。

7. スケーラブルであること。マークアップはテキストの長さに関係なく、\
   適用され得るべきです。

8. 強力であること。マークアップは適度にリッチで構造化されたドキュメントを\
   提供するのに十分な構造を提供するべきです。

9. 言語中立であること。マークアップは英語だけではなく、複数の自然言語に\
   （同様に人工言語も）適用されるべきです。

10. 拡張可能であること。マークアップは、より複雑な汎用のマークアップや\
    カスタムマークアップを追加するためのシンプルなシンタックスと\
    インターフェースを提供するべきです。

11. 出力形式中立であること。マークアップは複数の出力フォーマットへと処理する\
    ために適し、なにか特定のフォーマットに対して偏ったりしません。

.. The design goals above were used as criteria for accepting or
   rejecting syntax, or selecting between alternatives.

前述の設計目標は、シンタックスの受け入れ、または拒否もしくは複数の案の中から\
どれかを選択する際の基準として使われています。

.. It is emphatically *not* the goal of reStructuredText to define
   docstring semantics, such as docstring contents or docstring length.
   These issues are orthogonal to the markup syntax and beyond the scope
   of this specification.

reStructuredText のゴールは docstring の内容や docstring の長さなどのような\
docstring のセマンティクスを定義することでは、断じてありません。
これらの問題はマークアップのシンタックスとは直交しており、仕様の範疇を\
逸脱しています。

.. Also, it is not the goal of reStructuredText to maintain compatibility
   with StructuredText_ or Setext_.  reStructuredText shamelessly steals
   their great ideas and ignores the not-so-great.

また StructuredText_ や Setext_ との互換性を維持することも、reStructuredText の\
ゴールではありません。reStructuredText は臆面もなく、それらの偉大なアイデアを\
盗み、また偉大ではないアイデアを無視します。

.. Author's note:

       Due to the nature of the problem we're trying to solve (or,
       perhaps, due to the nature of the proposed solution), the above
       goals unavoidably conflict.  I have tried to extract and distill
       the wisdom accumulated over the years in the Python Doc-SIG_
       mailing list and elsewhere, to come up with a coherent and
       consistent set of syntax rules, and the above goals by which to
       measure them.

       There will inevitably be people who disagree with my particular
       choices.  Some desire finer control over their markup, others
       prefer less.  Some are concerned with very short docstrings,
       others with full-length documents.  This specification is an
       effort to provide a reasonably rich set of markup constructs in a
       reasonably simple form, that should satisfy a reasonably large
       group of reasonable people.
..

著者の注釈:

    私たちが解決しようとしている問題（もしくは、おそらく提案された解決策）の\
    特質上、前述のゴールは已むを得ず衝突します。私は Python Doc-SIG_ メーリング\
    リストや他の場所で長年に亘って蓄積されてきた叡智を抽出・蒸留して、\
    首尾一貫し矛盾のないシンタックス規則のセットを考え出し、またそれらを測る\
    ために前述のゴールを考え出すことを試みました。

    必然的に、私の特定の選択に同意しない人々が存在します。ある人は\
    マークアップのより細かい制御を望み、他の人は逆を望みます。
    ある人は非常に短い docstring を考えていますが、また他の人は文書全体の\
    テキストについて考えています。この仕様は適度にシンプルな形で、適度に\
    リッチなマークアップ構造のセットを提供するための努力であり、ほどよい\
    人たちの適度に大きなグループを満足させべきなのです。

    David Goodger (goodger@python.org), 2001-04-20

.. _Doc-SIG: http://www.python.org/sigs/doc-sig/


.. History
   =======
.. _history:

歴史
====

.. reStructuredText_, the specification, is based on StructuredText_ and
   Setext_.  StructuredText was developed by Jim Fulton of `Zope
   Corporation`_ (formerly Digital Creations) and first released in 1996.
   It is now released as a part of the open-source "Z Object Publishing
   Environment" (ZOPE_).  Ian Feldman's and Tony Sanders' earlier Setext_
   specification was either an influence on StructuredText or, by their
   similarities, at least evidence of the correctness of this approach.

reStructuredText_\ の仕様は、 StructuredText_ と Setext_ に基づいています。\
StructuredText は `Zope コーポレーション`_ （旧 デジタルクリエーション）の\
Jim Fulton によって開発され、1996年に初めてリリースされました。
現在では、オープンソースの "Z Object Publishing Environment" （\ ZOPE_\ ）の\
一部としてリリースされています。
Ian Feldman と Tony Sanders による初期の Setext_ の仕様はその類似性によって\
どちらも StructuredText に影響を与え、少なくともこのアプローチの正しさの
証拠となっています。

.. I discovered StructuredText_ in late 1999 while searching for a way to
   document the Python modules in one of my projects.  Version 1.1 of
   StructuredText was included in Daniel Larsson's pythondoc_.  Although
   I was not able to get pythondoc to work for me, I found StructuredText
   to be almost ideal for my needs.  I joined the Python Doc-SIG_
   (Documentation Special Interest Group) mailing list and found an
   ongoing discussion of the shortcomings of the StructuredText
   "standard".  This discussion has been going on since the inception of
   the mailing list in 1996, and possibly predates it.

1999年の後半に、私は自分のプロジェクトの一つで Python モジュールのドキュメントを\
書く方法を探していた時に StructuredText_ を見つけました。
StructuredText の バージョン 1.1 は Daniel Larsson の pythondoc_ に\
含まれていました。pythondoc は私の仕事に使うことはできませんでしたが、\
StructuredText が私のニーズにほぼ理想的なものであることが分かりました。
私は Python Doc-SIG_ （ドキュメンテーションに特に関心のあるグループ）\
メーリングリストに参加し、StructuredText "標準" の欠点について進行中の\
議論を見つけました。この議論は、1996年にメーリングリストが開設された当初以来、\
ことによるとそれ以前から継続していました。

.. I decided to modify the original module with my own extensions and
   some suggested by the Doc-SIG members.  I soon realized that the
   module was not written with extension in mind, so I embarked upon a
   general reworking, including adapting it to the "re" regular
   expression module (the original inspiration for the name of this
   project).  Soon after I completed the modifications, I discovered that
   StructuredText.py was up to version 1.23 in the ZOPE distribution.
   Implementing the new syntax extensions from version 1.23 proved to be
   an exercise in frustration, as the complexity of the module had become
   overwhelming.

私は自身の拡張と Doc-SIG のメンバーから提案されたいくつかで、オリジナルの\
モジュールを修正することを決めました。私はすぐにモジュールを念頭に\
置いて書かれていないことに気づき、"re" 正規表現モジュール（このプロジェクト\
の名称の最初のインスピレーションです）に対応させることを含めて全体の\
手直しに着手しました。修正が完了した直後、StructuredText.py は\
ZOPE ディストリビューションでは バージョン1.23 が最新であることに気づきました。\
バージョン 1.23 からの新しいシンタックス拡張を実装するのは、モジュールの\
複雑度が圧倒的になっていて、絶望的な課題であることが分かりました。

.. In 2000, development on StructuredTextNG_ ("Next Generation") began at
   `Zope Corporation`_ (then Digital Creations).  It seems to have many
   improvements, but still suffers from many of the problems of classic
   StructuredText.

2000年、 StructuredTextNG_ （"次世代: Next Generation"）が\
`Zope コーポレーション`_ （旧デジタルクリエーション）で始まりました。
多くの改良点がありますが、それでも古い StructuredText の問題に苦しんでいます。

.. I decided that a complete rewrite was in order, and even started a
   `reStructuredText SourceForge project`_ (now inactive).  My
   motivations (the "itches" I aim to "scratch") are as follows:

私は完全に書き直すときだと判断し、 `reStructuredText SourceForge project`_\
（現在は非アクティブ）をスタートさせました。
私のモチベーション（"かゆい"ところ。"引っ掻く"のが目的です）は、次のとおりです:

.. - I need a standard format for inline documentation of the programs I
     write.  This inline documentation has to be convertible to other
     useful formats, such as HTML.  I believe many others have the same
     need.

   - I believe in the Setext/StructuredText idea and want to help
     formalize the standard.  However, I feel the current specifications
     and implementations have flaws that desperately need fixing.

   - reStructuredText could form part of the foundation for a
     documentation extraction and processing system, greatly benefitting
     Python.  But it is only a part, not the whole.  reStructuredText is
     a markup language specification and a reference parser
     implementation, but it does not aspire to be the entire system.  I
     don't want reStructuredText or a hypothetical Python documentation
     processor to die stillborn because of over-ambition.

   - Most of all, I want to help ease the documentation chore, the bane
     of many a programmer.

- 私が書くプログラムのインラインドキュメントのための標準のフォーマットが\
  必要。このインラインドキュメントは、HTMLのような他の便利なフォーマットに\
  変換が可能なこと。他にも多くの人が同じことを望んでいると信じている。

- 私は Setext/StructuredText のアイデアを信じている。そして正式に標準となる\
  手助けをしたい。しかし、現在の仕様と実装には、死に物狂いの修正が必要な\
  欠陥があると感じる。

- reStructuredText はドキュメントの抽出と処理システムのための基板の一部を\
  形成でき、Python に大きな恵みをもたらすことができる。しかしそれは一部のみ\
  ではなくて全体である。reStructuredText はマークアップ言語の仕様であり、\
  パーサのリファレンス実装だが、システムの全てになることを熱望はしていない。
  私は過剰な野心によって reStructuredText や架空の Python ドキュメント\
  プロセッサが死産になることを望んではいない。

- なにより、私は多くのプログラマの不幸のタネ、ドキュメント書きの雑用を\
  和らげる手助けをしたい。

.. Unfortunately I was sidetracked and stopped working on this project.
   In November 2000 I made the time to enumerate the problems of
   StructuredText and possible solutions, and complete the first draft of
   a specification.  This first draft was posted to the Doc-SIG in three
   parts:

残念ながら、私は異動し、このプロジェクトに関わらなくなってしまいました。
2000年11月、StructuredText の問題と現実的な解決策を列挙し、仕様の最初の\
草案を完成させるための時間を作りました。
この最初の草案は、３部構成で Doc-SIG に投稿されました:

.. - `A Plan for Structured Text`__
   - `Problems With StructuredText`__
   - `reStructuredText: Revised Structured Text Specification`__

- `構造化テキストのための計画`__
- `StructuredText の問題点`__
- `reStructuredText: 改訂版 Structured Text 仕様`__

__ http://mail.python.org/pipermail/doc-sig/2000-November/001239.html
__ http://mail.python.org/pipermail/doc-sig/2000-November/001240.html
__ http://mail.python.org/pipermail/doc-sig/2000-November/001241.html

.. In March 2001 a flurry of activity on the Doc-SIG spurred me to
   further revise and refine my specification, the result of which you
   are now reading.  An offshoot of the reStructuredText project has been
   the realization that a single markup scheme, no matter how well
   thought out, may not be enough.  In order to tame the endless debates
   on Doc-SIG, a flexible `Docstring Processing System framework`_ needed
   to be constructed.  This framework has become the more important of
   the two projects; reStructuredText_ has found its place as one
   possible choice for a single component of the larger framework.

2001年3月の Doc-SIG での活動の慌ただしさは、私に仕様をより改訂し、\
より洗練させることに拍車をかけ、その結果が今あなたが読んでいるものです。
reStructuredText プロジェクトの分派は、単一のマークアップスキーマでは\
考えぬかれた方法であるにも関わらず、十分ではないかも知れないという\
認識でした。Doc-SIG での終わりの見えない議論を鎮めるために、柔軟な\
`Docstring 処理システムフレームワーク`_ を構築することが望まれました。
このフレームワークは２つのプロジェクトの中で、より重要なものになりました; \
reStructuredText_ はより大きなフレームワークの中の一つのコンポーネント\
としての地位を見つけたのです。

.. The project web site and the first project release were rolled out in
   June 2001, including posting the second draft of the spec [#spec-2]_
   and the first draft of PEPs 256, 257, and 258 [#peps-1]_ to the
   Doc-SIG.  These documents and the project implementation proceeded to
   evolve at a rapid pace.  Implementation history details can be found
   in the `project history file`_.

プロジェクトの web サイトと最初のプロジェクトのリリースは、Doc-SIG への\
仕様の二次草案 [#spec-2]_ および PEP 256、257 および 258 [#peps-1]_ の\
一次草案の投稿を含め、2001年6月にロールアウトしました。
これらのドキュメントとプロジェクトの実装は、急速なペースで進化していました。
実装の歴史の詳細は `プロジェクト履歴ファイル`_ で見ることができます。

.. In November 2001, the reStructuredText parser was nearing completion.
   Development of the parser continued with the addition of small
   convenience features, improvements to the syntax, the filling in of
   gaps, and bug fixes.  After a long holiday break, in early 2002 most
   development moved over to the other Docutils components, the
   "Readers", "Writers", and "Transforms".  A "standalone" reader
   (processes standalone text file documents) was completed in February,
   and a basic HTML writer (producing HTML 4.01, using CSS-1) was
   completed in early March.

2001年11月には reStructuredText のパーサは完成に近づいていました。\
パーサの開発は、小さな便利機能の追加、シンタックスの改善、抜け漏れの\
対応、そしてバグ修正を続けました。長い休みの後、2002年初頭には開発の\
ほとんどが Docutils の他のコンポーネント "リーダ"、"ライタ" そして\
"トランスフォーム" に移りました。"スタンドアローン" リーダ（単一の\
テキストファイルを処理する）は2月に完成し、基本的な HTML ライタ（HTML\
4.01 を提供し、CSS-1 を使います）は3月上旬に完成しました。

.. `PEP 287`_, "reStructuredText Standard Docstring Format", was created
   to formally propose reStructuredText as a standard format for Python
   docstrings, PEPs, and other files.  It was first posted to
   comp.lang.python_ and the Python-dev_ mailing list on 2002-04-02.

`PEP 287`_ "reStructuredText 標準 Docstring フォーマット" は、Python の\
docstring、PEP、そしてその他のファイルの標準フォーマットとして、\
reStructuredText を正式に提案するために作成されました。これは最初\
2002年4月2日に、 comp.lang.python_ と Python-dev_ メーリングリストに\
投稿されました。

.. Version 0.4 of the reStructuredText__ and `Docstring Processing
   System`_ projects were released in April 2002.  The two projects were
   immediately merged, renamed to "Docutils_", and a 0.1 release soon
   followed.

reStrucuturedText__ のバージョン 0.4 および `Docstring 処理システム`_\
プロジェクトは、2002年4月にリリースされました。２つのプロジェクトは\
すぐにマージされ、"Docutils_" と名を改め、0.1 がまもなくリリースされました。

.. __: `reStructuredText SourceForge project`_

..
   .. [#spec-2] The second draft of the spec:

      - `An Introduction to reStructuredText`__
      - `Problems With StructuredText`__
      - `reStructuredText Markup Specification`__
      - `Python Extensions to the reStructuredText Markup
        Specification`__
..
.. [#spec-2] 二次草案の仕様:

   - `reStructuredText の紹介`__
   - `StructuredText の問題点`__
   - `reStructuredText マークアップ仕様`__
   - `reStructuredText マークアップ仕様のための Python 拡張`__

   __ http://mail.python.org/pipermail/doc-sig/2001-June/001858.html
   __ http://mail.python.org/pipermail/doc-sig/2001-June/001859.html
   __ http://mail.python.org/pipermail/doc-sig/2001-June/001860.html
   __ http://mail.python.org/pipermail/doc-sig/2001-June/001861.html

..
   .. [#peps-1] First drafts of the PEPs:

      - `PEP 256: Docstring Processing System Framework`__
      - `PEP 258: DPS Generic Implementation Details`__
      - `PEP 257: Docstring Conventions`__

      Current working versions of the PEPs can be found in
      http://docutils.sourceforge.net/docs/peps/, and official versions
      can be found in the `master PEP repository`_.
..
.. [#peps-1] PEP の初期草案:

   - `PEP 256: Docstring 処理システムフレームワーク`__
   - `PEP 258: Docstring 処理システム 汎用実装詳細`__
   - `PEP 257: Docstring 規約`__

   PEP の現在の作業バージョンは http://docutils.sourceforge.net/docs/peps/ で
   見つけることが可能で、公式バージョンは `PEP マスタリポジトリ`_ で
   見つけることができます。

   __ http://mail.python.org/pipermail/doc-sig/2001-June/001855.html
   __ http://mail.python.org/pipermail/doc-sig/2001-June/001856.html
   __ http://mail.python.org/pipermail/doc-sig/2001-June/001857.html


.. _`Zope コーポレーション`:
.. _Zope Corporation: http://www.zope.com
.. _ZOPE: http://www.zope.org
.. _reStructuredText SourceForge project:
   http://structuredtext.sourceforge.net/
.. _pythondoc: http://starship.python.net/crew/danilo/pythondoc/
.. _StructuredTextNG:
   http://www.zope.org/DevHome/Members/jim/StructuredTextWiki/StructuredTextNG
.. _`プロジェクト履歴ファイル`:
.. _project history file: ../../../HISTORY.html
.. _PEP 287: ../../peps/pep-0287.html
.. _`Docstring 処理システムフレームワーク`:
.. _Docstring Processing System framework: ../../peps/pep-0256.html
.. _comp.lang.python: news:comp.lang.python
.. _Python-dev: http://mail.python.org/pipermail/python-dev/
.. _`Docstring 処理システム`:
.. _Docstring Processing System: http://docstring.sourceforge.net/
.. _`PEP マスタリポジトリ`:
.. _master PEP repository: http://www.python.org/peps/


..
   Local Variables:
   mode: indented-text
   indent-tabs-mode: nil
   sentence-end-double-space: t
   fill-column: 70
   End:
